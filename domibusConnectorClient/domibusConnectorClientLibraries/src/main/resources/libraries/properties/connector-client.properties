
############# domibusConnectorClientWSLink ##############

#Address where the domibusConnectorClient reaches the domibusConnector
connector-client.connector-link.ws.connectorAddress=http://<url>:<port>/<contextpath>

#Name of the alias of the key that the domibusConnectorClient shall encrypt messages to the connector with
connector-client.connector-link.ws.cxf.encryptAlias=connector

#boolean property to indicate wether the domibusConnector can push messages to the client.
connector-client.connector-link.ws.pushEnabled=true

#properties to configure the keystore. Must contain the private key the client uses to sign/decrypt messages
connector-client.connector-link.ws.cxf.keyStore.path=file:<full path to the keystore>
connector-client.connector-link.ws.cxf.keyStore.password=
connector-client.connector-link.ws.cxf.privateKey.alias=
connector-client.connector-link.ws.cxf.privateKey.password=

#properties to configure the truststore. Must contain the certificate of the domibusConnector with which the client encrypts messages with
connector-client.connector-link.ws.cxf.trustStore.path=file:<full path to the truststore>
connector-client.connector-link.ws.cxf.trustStore.password=


############# domibusConnectorClientScheduler ##############

#properties to configure the time-triggered job to get messages from the domibusConnector. Not necessary if client is configured as pushEnabled.
connector-client.scheduler.get-messages-from-connector-job.enabled=false
connector-client.scheduler.get-messages-from-connector-job.repeatInterval=30s

#properties to configure the time-triggered job to check the client backend for new messages to submit.
connector-client.scheduler.submit-messages-to-connector-job.enabled=false
connector-client.scheduler.submit-messages-to-connector-job.repeatInterval=30s

